==47726== Helgrind, a thread error detector
==47726== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==47726== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==47726== Command: ./a.out
==47726== 
==47726== ---Thread-Announcement------------------------------------------
==47726== 
==47726== Thread #1 is the program's root thread
==47726== 
==47726== ---Thread-Announcement------------------------------------------
==47726== 
==47726== Thread #2 was created
==47726==    at 0x5158FFE: clone (clone.S:74)
==47726==    by 0x4E44199: do_clone.constprop.3 (createthread.c:75)
==47726==    by 0x4E458BA: create_thread (createthread.c:245)
==47726==    by 0x4E458BA: pthread_create@@GLIBC_2.2.5 (pthread_create.c:611)
==47726==    by 0x4C31CBA: pthread_create_WRK (hg_intercepts.c:427)
==47726==    by 0x4C32D98: pthread_create@* (hg_intercepts.c:460)
==47726==    by 0x4007FE: main (poc.c:20)
==47726== 
==47726== ----------------------------------------------------------------
==47726== 
==47726== Possible data race during write of size 8 at 0x1FFEFFEE80 by thread #1
==47726== Locks held: none
==47726==    at 0x400809: main (poc.c:26)
==47726== 
==47726== This conflicts with a previous read of size 8 by thread #2
==47726== Locks held: none
==47726==    at 0x400785: worker (poc.c:10)
==47726==    by 0x4C31EAE: mythread_wrapper (hg_intercepts.c:389)
==47726==    by 0x4E45183: start_thread (pthread_create.c:312)
==47726==    by 0x515903C: clone (clone.S:111)
==47726==  Location 0x1ffeffee80 is 0 bytes inside local var "a"
==47726==  declared at poc.c:18, in frame #0 of thread 1
==47726== 
==47726== 
==47726== Use --history-level=approx or =none to gain increased speed, at
==47726== the cost of reduced accuracy of conflicting-access information
==47726== For lists of detected and suppressed errors, rerun with: -s
==47726== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
